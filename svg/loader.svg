<svg xmlns="http://www.w3.org/2000/svg" width="117px" height="80px" viewBox="0 0 585 400" id="container">
    <style>
        .loader-circle {
            stroke: #e4e2db;
            stroke-dasharray: 540;
            /* Warning: stroke-dashoffset:1 is used by isAnimated() */
            stroke-dashoffset: 1;
            stroke-width: 120;
            fill: transparent;
        }
        .loader-grey {
            -webkit-animation: draw-grey 3.8s infinite;
            animation: draw-grey 3.8s infinite;
        }
        .loader-colored {
            stroke: #ff5b51;
            -webkit-animation: draw-colored 3.8s infinite;
            animation: draw-colored 3.8s infinite;
        }
        @-webkit-keyframes draw-grey {
            0% {
                stroke-dashoffset: 0;
                -webkit-animation-timing-function: cubic-bezier(0.92, 0, 0.58, 1);
            }
            40% {
                stroke-dashoffset: 540;
                -webkit-animation-timing-function: cubic-bezier(0.92, 0, 0.58, 1);
            }
            100% {
                stroke-dashoffset: 540;
                -webkit-animation-timing-function: cubic-bezier(0.92, 0, 0.58, 1);
            }
        }
        @keyframes draw-grey {
            0% {
                stroke-dashoffset: 0;
                animation-timing-function: cubic-bezier(0.92, 0, 0.58, 1);
            }
            40% {
                stroke-dashoffset: 540;
                animation-timing-function: cubic-bezier(0.92, 0, 0.58, 1);
            }
            100% {
                stroke-dashoffset: 540;
                animation-timing-function: cubic-bezier(0.92, 0, 0.58, 1);
            }
        }
        @-webkit-keyframes draw-colored {
            0% {
                stroke-dashoffset: 0;
                -webkit-animation-timing-function: cubic-bezier(0.92, 0, 0.58, 1);
            }
            50% {
                stroke-dashoffset: 0;
                -webkit-animation-timing-function: cubic-bezier(0.92, 0, 0.58, 1);
            }
            90% {
                stroke-dashoffset: 540;
                -webkit-animation-timing-function: cubic-bezier(0.92, 0, 0.58, 1);
            }
            100% {
                stroke-dashoffset: 540;
                -webkit-animation-timing-function: cubic-bezier(0.92, 0, 0.58, 1);
            }
        }
        @keyframes draw-colored {
            0% {
                stroke-dashoffset: 0;
                animation-timing-function: cubic-bezier(0.92, 0, 0.58, 1);
            }
            50% {
                stroke-dashoffset: 0;
                animation-timing-function: cubic-bezier(0.92, 0, 0.58, 1);
            }
            90% {
                stroke-dashoffset: 540;
                animation-timing-function: cubic-bezier(0.92, 0, 0.58, 1);
            }
            100% {
                stroke-dashoffset: 540;
                animation-timing-function: cubic-bezier(0.92, 0, 0.58, 1);
            }
        }
    </style>
    <script><![CDATA[
        setTimeout(function() {
            var TOTAL_DURATION = 3800;

            var loader = document.getElementById('zoomLoader');
            var greyElements = loader.querySelectorAll('.loader-grey');
            var coloredElements = loader.querySelectorAll('.loader-colored');

            function isAnimated() {
                return parseInt(window.getComputedStyle(greyElements[0]).strokeDashoffset, 10) !== 1;
            }

            function setDashoffsetToClass(elements, dashoffset) {
                for (var i = 0; i < elements.length; i++) {
                    elements[i].style.strokeDashoffset = dashoffset;
                }
            }

            function moveThings(percent) {
                if (percent < 40) {
                    setDashoffsetToClass(greyElements, easeInOutCubic(percent, 0, 40, 0, 540));
                } else {
                    setDashoffsetToClass(greyElements, 540);
                }

                if (percent < 50) {
                    setDashoffsetToClass(coloredElements, 0);
                } else if(percent > 90) {
                    setDashoffsetToClass(coloredElements, 540);
                } else {
                    setDashoffsetToClass(coloredElements, easeInOutCubic(percent, 50, 90, 0, 540));
                }
            }

            var start = null;
            function step(timestamp) {
                if (start === null) {
                    start = timestamp;
                }

                var totalTime = timestamp - (start || timestamp);
                var percent = (totalTime % TOTAL_DURATION) * 100 / TOTAL_DURATION;

                moveThings(percent);

                window.requestAnimationFrame(step);
            }

            function easeInOutCubic(x, xMin, xMax, yMin, yMax) {
                x = (x - xMin) / (xMax - xMin);
                var y = x<0.5 ? 4*x*x*x : (x-1)*(2*x-2)*(2*x-2)+1;
                return (y * (yMax - yMin)) - yMin;
            }

            if (!isAnimated()) {
                window.requestAnimationFrame(step);
            }

        }, 100);
    ]]></script>
    <defs>
        <mask id="logo" width="585" height="400">
            <path fill="#FFF" fill-rule="evenodd" transform="translate(-160,77) scale(19)" d="M35.5 8.04l-.1.55-.15.52c-.05.18-.1.35-.17.52l-.22.5-.25.47c-.08.17-.17.32-.27.47-.1.14-.2.3-.32.42-.1.13-.2.26-.33.4-.12.12-.24.25-.37.36-.12.12-.26.24-.4.35-.13.12-.27.22-.4.32-.15.1-.3.18-.46.27l-.46.23c-.16.07-.32.14-.5.2-.15.06-.32.1-.5.16-.16.04-.33.08-.5.1-.18.05-.36.07-.54.1L29 14c-.23 0-.44 0-.66-.02-.22-.02-.44-.05-.66-.1-.2-.03-.43-.08-.64-.14l-.6-.2-.6-.28c-.18-.1-.36-.2-.54-.33-.18-.12-.35-.24-.5-.38.84-.7 1.53-1.6 1.98-2.64.12.1.25.2.38.27.18.1.38.2.58.28.2.08.42.13.64.17.22.04.43.05.65.04l.53-.07c.18-.03.34-.08.5-.14.18-.07.34-.15.5-.23.15-.1.3-.18.43-.3.13-.1.26-.2.38-.34.12-.13.24-.26.34-.4.1-.15.2-.3.28-.46.08-.16.15-.33.2-.5.07-.18.1-.36.14-.54.04-.18.06-.37.06-.56 0-.2 0-.38-.02-.57l-.1-.55c-.06-.18-.12-.35-.2-.5-.06-.18-.15-.33-.24-.48-.1-.15-.2-.3-.32-.42-.12-.14-.24-.26-.37-.38s-.27-.23-.42-.32c-.16-.1-.3-.18-.47-.25-.16-.07-.33-.13-.5-.17-.17-.05-.35-.08-.53-.1h-.55c-.18 0-.36.04-.53.08-.17.05-.34.1-.5.17-.16.07-.32.15-.47.24l-.43.3c-.14.12-.26.24-.38.37s-.23.27-.33.42c-.1.14-.2.3-.26.46-.08.16-.14.33-.2.5-.04.18-.08.36-.1.54-.03.18-.05.37-.05.56v.3c0 .22-.03.45-.06.68-.03.23-.07.45-.12.67-.05.22-.1.44-.18.65l-.24.62c-.1.2-.18.4-.3.6-.1.18-.2.36-.33.54-.12.18-.25.36-.38.52-.07.1-.15.18-.23.27l-.55.52-.6.48c-.2.14-.43.27-.65.4-.22.1-.45.22-.7.3-.22.1-.47.2-.7.25s-.5.12-.75.15c-.26.04-.5.06-.76.07-.2 0-.4 0-.6-.02-.2 0-.37-.03-.56-.06l-.52-.1-.5-.15c-.18-.06-.35-.12-.5-.2l-.5-.2-.45-.27-.44-.3c-.14-.1-.27-.2-.4-.33-.14-.1-.27-.23-.4-.36-.1-.13-.23-.26-.35-.4l-.33-.42-.3-.45-.25-.46c-.08-.16-.16-.32-.23-.5l-.2-.5-.14-.53c-.05-.18-.1-.36-.12-.54l-.06-.56-.03-.57c0-.2 0-.38.02-.58l.06-.57.1-.55.14-.54c.05-.17.1-.34.18-.5l.2-.5c.1-.17.18-.33.26-.5l.3-.44.3-.43.35-.4.38-.37.4-.34.43-.3c.15-.1.3-.2.45-.28.16-.1.3-.17.47-.24.16-.07.32-.14.5-.2.15-.06.32-.1.5-.16.17-.05.34-.1.52-.12l.54-.08.55-.03c.22 0 .44 0 .65.03.22.02.44.05.66.1.2.03.43.08.64.14.2.06.4.14.6.22l.6.28c.2.1.37.22.55.34.18.1.35.24.52.38-.85.7-1.54 1.6-2 2.63-.1-.1-.24-.18-.37-.26-.2-.1-.38-.2-.58-.27-.2-.07-.42-.13-.64-.16-.2-.03-.42-.04-.64-.04-.18 0-.36.03-.54.07-.17.04-.35.08-.5.15-.18.06-.33.13-.5.22-.14.08-.3.18-.43.3-.14.1-.27.2-.4.34-.1.14-.22.27-.32.42-.1.14-.2.3-.28.46-.08.16-.15.32-.2.5-.06.17-.1.34-.14.53-.03.2-.04.4-.05.57 0 .2 0 .38.02.57l.1.55c.06.16.12.34.2.5.07.16.15.32.25.47l.3.43c.12.14.25.26.38.37.13.1.27.22.42.3.14.1.3.18.46.25.16.08.33.13.5.18.17.05.35.08.53.1.2 0 .38.02.56 0 .18 0 .36-.03.53-.07.16-.04.33-.1.5-.16.15-.07.3-.14.46-.24.15-.1.3-.2.42-.3l.38-.37c.12-.13.22-.27.32-.42.1-.14.2-.3.26-.46.08-.17.14-.34.2-.5.05-.2.1-.37.12-.55.03-.2.04-.38.04-.57v-.3l.07-.68c.03-.22.07-.45.12-.67.04-.2.1-.42.17-.63l.23-.6c.1-.2.18-.4.3-.6.1-.18.2-.36.33-.54.1-.18.24-.35.38-.52l.34-.36c.17-.18.36-.36.55-.53l.6-.45c.22-.14.43-.26.66-.38.23-.12.46-.22.7-.3.24-.1.48-.17.73-.23.23-.06.5-.1.74-.14.25-.03.5-.05.76-.05.15 0 .3 0 .44.02l.54.06.53.1.52.16c.16.05.33.1.5.18l.46.23.46.27.43.3c.14.1.28.2.4.33l.4.36.35.4.33.4.3.45.25.48.23.48.2.5.14.54c.04.18.08.36.1.54l.1.56.02.57c0 .2 0 .4-.02.58 0 .2-.03.38-.06.56z" />
        </mask>
    </defs>
    <g mask="url(#logo)">
        <path class="loader-circle" d="M300 200a100 100 0 1 1-29.29-70.71" />
        <path class="loader-circle loader-colored" d="M300 200a100 100 0 1 1-29.29-70.71" ng-attr-style="{{getStyleFillColor('stroke')}}" />
        <path class="loader-circle loader-grey" d="M300 200a100 100 0 1 1-29.29-70.71" />
        <g transform="translate(596, 400) scale(-1, -1)">
            <path class="loader-circle" d="M300 200a100 100 0 1 1-29.29-70.71" />
            <path class="loader-circle loader-colored" d="M300 200a100 100 0 1 1-29.29-70.71" ng-attr-style="{{getStyleFillColor('stroke')}}" />
            <path class="loader-circle loader-grey" d="M300 200a100 100 0 1 1-29.29-70.71" />
        </g>
    </g>
</svg>
